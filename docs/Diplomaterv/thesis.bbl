\makeatletter \ifx\bibEarlyBegin\hfuzz
  \def\bibEarlyBegin{\begingroup\everypar{}\sloppy\hbadness10000
    \def\Hy@colorlink##1{\begingroup}
    \def\Hy@endcolorlink{\endgroup}
    \def\@inpenc@loop##1##2{}
    \def\thebibliography##1{}
    \def\endthebibliography{\skip@egroup\aftergroup\bibEarlyEnd}%
    \def\inputencoding##1{}\c@enumi\z@
    \def\bibitem{\skip@egroup \let\skip@egroup\egroup
      \advance\c@enumi\@ne\@ifnextchar[\@lbibitem\@bibitem}%
    \def\@lbibitem[##1]##2{\bibcite{##2}{##1}%
      \setbox0\vbox\bgroup}% avoid emitting boxes
    \def\@bibitem##1{\expandafter\skip@bibcite\expandafter
      {\the\c@enumi}{##1}\setbox0\vbox\bgroup}% avoid emitting boxes
    \def\skip@bibcite##1##2{\bibcite{##2}{##1}}%
    \catcode11=9 % ignored
    \@tempcnta  1 \loop\catcode\@tempcnta=9
      \ifnum\@tempcnta<  8 \advance\@tempcnta\@ne\repeat
    \@tempcnta 14 \loop\catcode\@tempcnta=9
      \ifnum\@tempcnta< 31 \advance\@tempcnta\@ne\repeat
    \@tempcnta127 \loop\catcode\@tempcnta=9
      \ifnum\@tempcnta<255 \advance\@tempcnta\@ne\repeat
    \let\skip@egroup\relax}
  \def\bibEarlyEnd{\endgroup \let\bibcite\@gobbletwo
    \global\let\bibEarlyRead\relax}
  \bibEarlyBegin
\else \let\bibEarlyEnd\relax \fi

\begin{thebibliography}{10}
\frenchspacing
\makeatletter
\global\def\bibIE@lowc{%
  \expandafter\ifx\csname inputencoding\endcsname\relax
    \def\NeedsTeXFormat##1]{}%
    \def\ProvidesPackage##1]{}%
    \def\DeclareOption##1##2{}%
    \def\ProcessOptions{\@ifstar\@gobble\@empty}%
    \input inputenc.sty
    \let\NeedsTeXFormat \@notprerr
    \let\ProvidesPackage\@notprerr
    \let\DeclareOption  \@notprerr
    \let\ProcessOptions \@notprerr
  \fi
  \global\let\bibIE@lowc\relax}
\def\bibIE@lowa#1#2{%
  \global\def\bibResetInputEncoding{\bibIE@lowb{ascii}}% anti-warning
  \ifx#1\relax\else
  \ifx#1\@inpenc@undefined@\@empty
    \global\def\bibResetInputEncoding{\bibIE@lowb{#2}}%
    \ifx\bibResetInputEncoding\reserved@a% keep old encoding
      \global\let\bibResetInputEncoding\@empty \let\reserved@a\@empty \fi
  \fi\fi}
\let\bibIE@input\input
\def\bibIE@ascii{ascii}
\def\bibIE@lowb#1{%
  \def\reserved@a{#1}\ifx\reserved@a\bibIE@ascii
    \gdef\@inpenc@test{\global\let\@inpenc@test\relax}%
    \edef\@inpenc@undefined{\noexpand\@inpenc@undefined@{ascii}}%
    \@inpenc@loop\^^A\^^H\@inpenc@loop\^^K\^^K%
    \@inpenc@loop\^^N\^^_\@inpenc@loop\^^?\^^ff%
\else\def\input{\global\let\@inpenc@test\relax \bibIE@input}% no {ascii} warn
  \inputencoding{#1}\fi}%
\def\bibInputEncoding#1{%
  \bibIE@lowc
  \def\reserved@a{\bibIE@lowb{#1}}%
  % vvv \@inpenc@undefined -> `\@inpenc@undefined@{latin2}' or undefined
  \expandafter\expandafter\expandafter\bibIE@lowa\csname
    @inpenc@undefined\endcsname\relax
  \reserved@a}

\def\leftflushbreak{\ifx\\\@centercr\penalty100 \else
  \unpenalty\unpenalty{\@tempdima\lastskip\unskip\nobreak
  \hskip\@tempdima plus1fil}\null\penalty100 \hskip0pt plus-1fil\relax\fi}
\begingroup\lccode\string`~=\string`\^^M
  \lowercase{\endgroup\def\verb@eol@error{\obeylines\def~{\bibVerbNoSp}}}
\begingroup\lccode\string`~=\string`\ \relax
  \lowercase{\endgroup\def\bibVerbNoSp#1{\ifx#1~\expandafter\bibVerbNoSp
  \else\expandafter#1\fi}}
\expandafter\ifx\csname bibUrll\endcsname\relax
\expandafter\ifx\csname url\endcsname\relax
     \def\bibUrll#1>{\leavevmode\leftflushbreak #1~\verb>}
\else\def\bibUrll#1>{\leavevmode\leftflushbreak#1~\begingroup
       \catcode\string`\%=12 \catcode\string`\#=12 \bibUrlll}
     \def\bibUrlll#1>{\url{#1}\endgroup}\fi
\fi
\def\bibHU@mix#1{\egroup#1}
\def\bibAnd#1{\nobreak\,\nobreak\hbox{--}\,}
\def\bibEtAl#1{ \'es m\'asok}
\def\bibEd#1{ (szerk.)}
\def\bibNewBlock{\unskip\space}
\def\bibVolume#1#2{#1 k\"ot.} \let\bibNumVolumes\bibVolume
\def\bibTechRep#1{Jelent\'{e}s}
\def\bibInSelf#1{In u\H{o}: }
\csname bibOverride\endcsname

\bibitem{biqcrunch}
{BiqCrunch developers}:
\bibNewBlock Biqcrunch -- a semidefinite branch-and-bound method for solving
  binary quadratic problems, 2021.
\bibNewBlock
\bibUrll{URL} >https://biqcrunch.lipn.univ-paris13.fr/BiqCrunch/>.
\bibNewBlock [Online; accessed 27-Sep-2021].

\bibitem{qpsolvers}
Stephane Caron:
\bibNewBlock {qpsolvers}: Quadratic programming solvers in python with a
  unified api.
\bibNewBlock
\bibUrll{URL} >https://github.com/stephane-caron/qpsolvers>.
\bibNewBlock [Online; accessed 7-Oct-2021].

\bibitem{DWaveOceanBQM}
{D-Wave Systems}:
\bibNewBlock {D-Wave Concepts BQM}.
\bibNewBlock \url{https://docs.ocean.dwavesys.com/en/stable/concepts/bqm.html}.

\bibitem{DWaveOceanQbsolv}
{D-Wave Systems}:
\bibNewBlock {D-Wave Ocean qbsolv documentation}.
\bibNewBlock \url{https://docs.ocean.dwavesys.com/projects/qbsolv}.

\bibitem{DWaveOcean}
{D-Wave Systems}:
\bibNewBlock {D-Wave Ocean Software Documentation}.
\bibNewBlock \url{https://docs.ocean.dwavesys.com/}.

\bibitem{DWaveSystem}
{D-Wave Systems}:
\bibNewBlock {D-Wave Systems | The Practical Quantum Computing Company}.
\bibNewBlock \url{https://www.dwavesys.com/}.

\bibitem{10.5555/1283383.1283390}
Wenceslas~Fernandez de~la Vega\bibAnd 1Claire Kenyon-Mathieu:
\bibNewBlock Linear programming relaxations of maxcut.
\bibNewBlock In {\em Proceedings of the Eighteenth Annual ACM-SIAM Symposium on
  Discrete Algorithms}, SODA '07 kon\-fe\-ren\-cia\-so\-ro\-zat.
\bibNewBlock USA, 2007, Society for Industrial and Applied Mathematics,
  53–61.~p.
\bibNewBlock ISBN 9780898716245.
\bibNewBlock 9~p.

\bibitem{cvxpy}
Steven Diamond\bibAnd 1Stephen Boyd:
\bibNewBlock {CVXPY}: A {P}ython-embedded modeling language for convex
  optimization.
\bibNewBlock {\em Journal of Machine Learning Research}, 2016.
\bibNewBlock
\bibUrll{URL} >http://stanford.edu/~boyd/papers/pdf/cvxpy_paper.pdf>.
\bibNewBlock To appear.

\bibitem{fuchs2020efficient}
Franz~Georg Fuchs\bibAnd 0Herman Øie Kolden\bibAnd 0Niels~Henrik Aase\bibAnd
  2Giorgio Sartor:
\bibNewBlock Efficient encoding of the weighted max k-cut on a quantum computer
  using {QAOA}.
\bibNewBlock {\em SN Computer Science}, 2. \'evf. (2021) 2. sz., 1--14.~p.

\bibitem{DBLP:journals/corr/abs-1811-11538}
Fred~W. Glover\bibAnd 1Gary~A. Kochenberger:
\bibNewBlock A tutorial on formulating {QUBO} models.
\bibNewBlock {\em CoRR}, abs/1811.11538. \'evf. (2018).
\bibNewBlock
\bibUrll{URL} >http://arxiv.org/abs/1811.11538>.

\bibitem{10.1145/227683.227684}
Michel~X. Goemans\bibAnd 1David~P. Williamson:
\bibNewBlock Improved approximation algorithms for maximum cut and
  satisfiability problems using semidefinite programming.
\bibNewBlock {\em J. ACM}, 42. \'evf. (1995.\ no{\-}vem{\-}ber) 6. sz.,
  1115–1145.~p.
\bibNewBlock ISSN 0004-5411.
\bibNewBlock
\bibUrll{URL} >https://doi.org/10.1145/227683.227684>.
\bibNewBlock 31~p.

\bibitem{gurobiAcademicColab}
{Gurobi Community}:
\bibNewBlock How to install academic license in google colab, 2021.
\bibNewBlock
\bibUrll{URL}
  >https://support.gurobi.com/hc/en-us/community/posts/4403075622929-How-
  To-Install-Academic-License-in-Google-Colab>.

\bibitem{gurobiBestObjStop}
{Gurobi Optimization, LLC}:
\bibNewBlock Bestobjstop, 2021.
\bibNewBlock
\bibUrll{URL} >https://www.gurobi.com/documentation/9.1/refman/bestobjstop.
  html#parameter:BestObjStop>.

\bibitem{gurobi}
{Gurobi Optimization, LLC}:
\bibNewBlock Gurobi optimizer reference manual, 2021.
\bibNewBlock
\bibUrll{URL} >http://www.gurobi.com>.

\bibitem{gurobiWLS}
{Gurobi Optimization, LLC}:
\bibNewBlock Web license service - gurobi, 2021.
\bibNewBlock
\bibUrll{URL} >http://www.gurobi.com/web-license-service/>.

\bibitem{Hojny2021}
Christopher Hojny\bibAnd 0Imke Joormann\bibAnd 0Hendrik L\"uthen\bibAnd 2Martin
  Schmidt:
\bibNewBlock Mixed-integer programming techniques for the connected max-k-cut
  problem.
\bibNewBlock {\em Mathematical Programming Computation}, 13. \'evf. (2021) 1.
  sz., 75--132.~p.
\bibNewBlock ISSN 1867-2957.
\bibNewBlock
\bibUrll{URL} >https://doi.org/10.1007/s12532-020-00186-3>.

\bibitem{NetworkX}
{NetworkX developers}:
\bibNewBlock {NetworkX}.
\bibNewBlock \url{https://networkx.org/}.

\bibitem{POLJAK1994191}
Svatopluk Poljak\bibAnd 1Zsolt Tuza:
\bibNewBlock The expected relative error of the polyhedral approximation of the
  max-cut problem.
\bibNewBlock {\em Operations Research Letters}, 16. \'evf. (1994) 4. sz.,
  191--198.~p.
\bibNewBlock ISSN 0167-6377.
\bibNewBlock
\bibUrll{URL}
  >https://www.sciencedirect.com/science/article/pii/016763779490068X>.

\bibitem{quadprog}
preeyan:
\bibNewBlock quadprog: Quadratic programming solver (python).
\bibNewBlock
\bibUrll{URL} >https://github.com/quadprog/quadprog>.
\bibNewBlock [Online; accessed 7-Oct-2021].

\bibitem{Ramana1996}
Motakuri~V. Ramana\bibAnd 1Panos~M. Pardalos:
\bibNewBlock {\em Semidefinite Programming}.
\bibNewBlock Boston, MA, 1996, Springer US, 369--398.~p.
\bibNewBlock ISBN 978-1-4613-3449-1.
\bibNewBlock
\bibUrll{URL} >https://doi.org/10.1007/978-1-4613-3449-1_9>.

\bibitem{algoritmusokBook}
Lajos Rónyai\bibAnd 0Gábor Ivanyos\bibAnd 2Réka Szabó:
\bibNewBlock {\em Algoritmusok}.
\bibNewBlock 2008, Typotex.

\bibitem{rozsa}
Pál Rózsa:
\bibNewBlock {\em Lineáris algebra és alkalmazásai}.
\bibNewBlock 1991, Tankönyvkiadó, Budapest.

\bibitem{Szabo}
Dániel Szabó:
\bibNewBlock Kvantuminformatika és gépi tanulás.
\bibNewBlock Szakdolgozat (BME - VIK).
\bibNewBlock 2018.

\bibitem{wiki:Maximum_cut}
Wikipedia:
\bibNewBlock {Maximum cut} --- {W}ikipedia{,} the free encyclopedia.
\bibNewBlock
  \url{http://en.wikipedia.org/w/index.php?title=Maximum\%20cut&oldid=1050440984},
  2021.
\bibNewBlock [Online; accessed 27-October-2021].

\bibitem{wiki:VLSI}
Wikipedia:
\bibNewBlock {Very Large Scale Integration} --- {W}ikipedia{,} the free
  encyclopedia.
\bibNewBlock
  \url{http://en.wikipedia.org/w/index.php?title=Very\%20Large\%20Scale\%20Integration&oldid=1038382230},
  2021.
\bibNewBlock [Online; accessed 27-October-2021].

\bibitem{enwiki:1020700695}
{Wikipedia contributors}:
\bibNewBlock Quadratic unconstrained binary optimization --- {Wikipedia}{,} the
  free encyclopedia, 2021.
\bibNewBlock
\bibUrll{URL} >https://en.wikipedia.org/w/index.php?
  title=Quadratic_unconstrained_binary_optimization&oldid=1020700695>.
\bibNewBlock [Online; accessed 28-Feb-2021].

\end{thebibliography}
